import{_ as s,c as a,o as e,O as l}from"./chunks/framework.9c3ff96d.js";const d=JSON.parse('{"title":"Collections","description":"","frontmatter":{"title":"Collections","lang":"en-US"},"headers":[],"relativePath":"template-api/collections.md","filePath":"template-api/collections.md","lastUpdated":1693751631000}'),o={name:"template-api/collections.md"},n=l(`<h1 id="collections" tabindex="-1">Collections <a class="header-anchor" href="#collections" aria-label="Permalink to &quot;Collections&quot;">​</a></h1><p>The <code>TemplateAPI</code> contains a number of useful modules to create collections of SVG shapes.</p><h2 id="alignment" tabindex="-1">Alignment <a class="header-anchor" href="#alignment" aria-label="Permalink to &quot;Alignment&quot;">​</a></h2><p><code>Alignment</code> is an enum that defines alignments to easily pass as parameters.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Alignment</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Left </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">left</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	Center </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">center</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	Right </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">right</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="break-line" tabindex="-1">Break Line <a class="header-anchor" href="#break-line" aria-label="Permalink to &quot;Break Line&quot;">​</a></h2><p>The <code>BreakLine</code> type is a simple way to create a break line in a collection.<br> It may get added using the <code>BreakLine()</code> function.</p><h2 id="shape-collection" tabindex="-1">Shape Collection <a class="header-anchor" href="#shape-collection" aria-label="Permalink to &quot;Shape Collection&quot;">​</a></h2><p>The <code>ShapeCollection</code> builds, places and styles a collection of shapes and returns the d3 selection of the created svg group. It takes an array of d3 selection that represent the <code>shapes</code> to be displayed, requires a <a href="/template-api/styling.html#collection-style">CollectionStyle</a> <code>style</code> object and takes an optional <code>ellipsis</code> parameter that defines a shape that should be displayed if there are more items than the collection cann&#39;t display.</p><p>This module tries to place the items according to the given <code>style</code> and stops if it exceeds the collection&#39;s boundaries. If set it will render the ellipsis shape at the end of the collection to indicate that there are more items.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>This module is primarily used within the <a href="#tag-collection">TagCollection</a> and <a href="#text-collection">TextCollection</a> modules and should only be directly used for special cases.</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ellipsis </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TextShape</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#82AAFF;">ShapeStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ShapeStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> collection </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ShapeCollection</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	[shape1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> shape2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> shape3]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">CollectionStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	ellipsis</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="tag-collection" tabindex="-1">Tag Collection <a class="header-anchor" href="#tag-collection" aria-label="Permalink to &quot;Tag Collection&quot;">​</a></h2><p>The <code>TagCollection</code> builds ontop of the <a href="#shape-collection">ShapeCollection</a> module to display a collection of tags. It takes an string array <code>tags</code> as well as a <a href="/template-api/styling.html#collection-style">CollectionStyle</a> and <a href="/template-api/styling.html#tag-style">TagStyle</a> objects. It returns the d3 selection of the created collection.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> tags </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TagCollection</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tag1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tag2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tag3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CollectionStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TagStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="text-collection" tabindex="-1">Text Collection <a class="header-anchor" href="#text-collection" aria-label="Permalink to &quot;Text Collection&quot;">​</a></h2><p>The <code>TextCollection</code> builds ontop of the <a href="#shape-collection">ShapeCollection</a> module to display a collection of text. It takes a <code>text</code> string which gets split into each word to wrap it into each line if the end of line is reached. Besides that it also requires a <a href="/template-api/styling.html#collection-style">CollectionStyle</a> and an array of <a href="/template-api/styling.html#shape-style">ShapeStyle</a> objects to style the text elements. It returns the d3 selection of the created collection.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> text </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TextCollection</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CollectionStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#82AAFF;">ShapeStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ShapeStyle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)])</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,18),t=[n];function p(c,r,i,y,D,C){return e(),a("div",null,t)}const h=s(o,[["render",p]]);export{d as __pageData,h as default};
